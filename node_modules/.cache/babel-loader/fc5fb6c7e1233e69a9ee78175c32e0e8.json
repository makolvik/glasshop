{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LH\\\\Desktop\\\\projects\\\\reactApp\\\\meteorproject\\\\src\\\\components\\\\Reviews.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Review from \"./Review\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  text: {\n    width: \"100%\",\n    maxWidth: 500\n  },\n  image: {\n    width: \"100%\"\n  },\n  formitem: {\n    flexDirection: \"row\",\n    display: \"flex\"\n  }\n}));\nexport default function Reviews(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [reviewState, setReview] = useState({\n    title: \"\",\n    text: \"\",\n    rating: 0\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(\"submit\");\n  };\n\n  const changeText = event => {\n    // const newstate = reviewState;\n    // newstate.text = newValue;\n    // setReview(newstate);\n    console.log(event.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Name\",\n    className: classes.formitem,\n    value: reviewState.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 4,\n    className: classes.formitem,\n    value: reviewState.text,\n    onChange: (event, newValue) => {\n      changeText(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Controlled\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: reviewState.rating,\n    onChange: (event, newValue) => setValue(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Send\"))), props.items.itemrating.comments.map(item => {\n    return /*#__PURE__*/React.createElement(Review, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/components/Reviews.js"],"names":["React","useState","makeStyles","Grid","Review","Rating","Typography","Box","TextField","Button","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","width","maxWidth","image","formitem","flexDirection","display","Reviews","props","classes","value","setValue","reviewState","setReview","title","rating","submitHandler","event","preventDefault","console","log","changeText","newValue","items","itemrating","comments","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Review from \"./Review\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  text: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n  },\r\n  formitem: {\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function Reviews(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [reviewState, setReview] = useState({ title: \"\", text: \"\", rating: 0 });\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submit\");\r\n  };\r\n  const changeText = (event) => {\r\n    // const newstate = reviewState;\r\n    // newstate.text = newValue;\r\n    // setReview(newstate);\r\n    console.log(event.value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <form\r\n          onSubmit={submitHandler}\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Name\"\r\n            className={classes.formitem}\r\n            value={reviewState.title}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Multiline\"\r\n            multiline\r\n            rows={4}\r\n            className={classes.formitem}\r\n            value={reviewState.text}\r\n            onChange={(event, newValue) => {\r\n              changeText(event);\r\n            }}\r\n          />\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Typography component=\"legend\">Controlled</Typography>\r\n            <Rating\r\n              name=\"simple-controlled\"\r\n              value={reviewState.rating}\r\n              onChange={(event, newValue) => setValue(0)}\r\n            />\r\n          </Box>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Grid>\r\n      {props.items.itemrating.comments.map((item) => {\r\n        return <Review item={item} />;\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}