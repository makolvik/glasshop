{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\LH\\\\Desktop\\\\projects\\\\reactApp\\\\meteorproject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{GoogleMap,LoadScript}from\"@react-google-maps/api\";var containerStyle={width:\"100%\",height:\"400px\"};var center={lat:-3.745,lng:-38.523};function MyComponent(){var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),map=_React$useState2[0],setMap=_React$useState2[1];var onLoad=React.useCallback(function callback(map){var bounds=new window.google.maps.LatLngBounds();map.fitBounds(bounds);setMap(map);},[]);var onUnmount=React.useCallback(function callback(map){setMap(null);},[]);return/*#__PURE__*/React.createElement(LoadScript,{googleMapsApiKey:\"AIzaSyD3HLXN1CCGkiDj8mCS8uv_lVbQNmrmNq0\"},/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:10,onLoad:onLoad,onUnmount:onUnmount},/*#__PURE__*/React.createElement(React.Fragment,null)));}export default React.memo(MyComponent);","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/components/Map.js"],"names":["React","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","MyComponent","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,wBAAtC,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,KAAK,CAAE,MADc,CAErBC,MAAM,CAAE,OAFa,CAAvB,CAKA,GAAMC,CAAAA,MAAM,CAAG,CACbC,GAAG,CAAE,CAAC,KADO,CAEbC,GAAG,CAAE,CAAC,MAFO,CAAf,CAKA,QAASC,CAAAA,WAAT,EAAuB,qBACCT,KAAK,CAACU,QAAN,CAAe,IAAf,CADD,oDACdC,GADc,qBACTC,MADS,qBAGrB,GAAMC,CAAAA,MAAM,CAAGb,KAAK,CAACc,WAAN,CAAkB,QAASC,CAAAA,QAAT,CAAkBJ,GAAlB,CAAuB,CACtD,GAAMK,CAAAA,MAAM,CAAG,GAAIC,CAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf,CACAT,GAAG,CAACU,SAAJ,CAAcL,MAAd,EACAJ,MAAM,CAACD,GAAD,CAAN,CACD,CAJc,CAIZ,EAJY,CAAf,CAMA,GAAMW,CAAAA,SAAS,CAAGtB,KAAK,CAACc,WAAN,CAAkB,QAASC,CAAAA,QAAT,CAAkBJ,GAAlB,CAAuB,CACzDC,MAAM,CAAC,IAAD,CAAN,CACD,CAFiB,CAEf,EAFe,CAAlB,CAIA,mBACE,oBAAC,UAAD,EAAY,gBAAgB,CAAC,yCAA7B,eACE,oBAAC,SAAD,EACE,iBAAiB,CAAET,cADrB,CAEE,MAAM,CAAEG,MAFV,CAGE,IAAI,CAAE,EAHR,CAIE,MAAM,CAAEO,MAJV,CAKE,SAAS,CAAES,SALb,eAQE,wCARF,CADF,CADF,CAcD,CAED,cAAetB,CAAAA,KAAK,CAACuB,IAAN,CAAWd,WAAX,CAAf","sourcesContent":["import React from \"react\";\r\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523,\r\n};\r\n\r\nfunction MyComponent() {\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyD3HLXN1CCGkiDj8mCS8uv_lVbQNmrmNq0\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(MyComponent);\r\n"]},"metadata":{},"sourceType":"module"}