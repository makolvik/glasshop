{"ast":null,"code":"import React from \"react\";\nimport { act } from \"react-dom/test-utils\";\nexport const ContextApp = React.createContext();\nexport const initialState = {\n  cart: [{\n    id: 1,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45,\n    art: 123\n  }, {\n    id: 2,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45,\n    art: 124\n  }, {\n    id: 3,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45,\n    art: 125\n  }],\n  total: 135,\n  order: []\n};\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"add_item\":\n      const newitem = { ...action.payload,\n        quant: 1,\n        total: action.payload.price\n      };\n      const currart = newitem.art;\n      const index = state.cart.findIndex(x => x.art === currart);\n\n      if (index < 0) {\n        return { ...state,\n          cart: [...state.cart, newitem],\n          total: state.total + newitem.price\n        };\n      } else {\n        state.cart[currart].quant = state.cart[currart].quant + 1;\n        state.cart[currart].total = state.cart[currart].total + state.cart[currart].price;\n        state.total = state.total + state.cart[currart].price;\n        return { ...state\n        };\n      }\n\n    case \"add_quant_test\":\n      const idadd = action.payload;\n      state.cart[idadd].quant = state.cart[idadd].quant + 1;\n      state.cart[idadd].total = state.cart[idadd].total + state.cart[idadd].price;\n      state.total = state.total + state.cart[idadd].price;\n      console.log(state, \"addquant\");\n      return { ...state\n      };\n\n    case \"minus_quant_test\":\n      const idminus = action.payload;\n      state.cart[idminus].quant = state.cart[idminus].quant - 1;\n      state.cart[idminus].total = state.cart[idminus].total - state.cart[idminus].price;\n      state.total = state.total - state.cart[idminus].price;\n\n      if (state.cart[idminus] === 0) {\n        return state.filter(item => item.id === idminus);\n      }\n\n      console.log(state, \"addquant\");\n      return { ...state\n      };\n\n    case \"send_order\":\n      const neworder = {\n        num: 1223,\n        customer: \"oleg\",\n        items: state.cart,\n        total: state.total\n      };\n      return { ...state,\n        cart: [],\n        total: 0,\n        order: [...state.order, neworder]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/context/reducer.js"],"names":["React","act","ContextApp","createContext","initialState","cart","id","name","price","quant","total","art","order","cartReducer","state","action","type","newitem","payload","currart","index","findIndex","x","idadd","console","log","idminus","filter","item","neworder","num","customer","items"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport const ContextApp = React.createContext();\r\n\r\nexport const initialState = {\r\n  cart: [\r\n    { id: 1, name: \"item1\", price: 45, quant: 1, total: 45, art: 123 },\r\n    { id: 2, name: \"item1\", price: 45, quant: 1, total: 45, art: 124 },\r\n    { id: 3, name: \"item1\", price: 45, quant: 1, total: 45, art: 125 },\r\n  ],\r\n  total: 135,\r\n  order: [],\r\n};\r\nexport const cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add_item\":\r\n      const newitem = {\r\n        ...action.payload,\r\n        quant: 1,\r\n        total: action.payload.price,\r\n      };\r\n      const currart = newitem.art;\r\n      const index = state.cart.findIndex((x) => x.art === currart);\r\n      if (index < 0) {\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, newitem],\r\n          total: state.total + newitem.price,\r\n        };\r\n      } else {\r\n        state.cart[currart].quant = state.cart[currart].quant + 1;\r\n        state.cart[currart].total =\r\n          state.cart[currart].total + state.cart[currart].price;\r\n        state.total = state.total + state.cart[currart].price;\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n    case \"add_quant_test\":\r\n      const idadd = action.payload;\r\n      state.cart[idadd].quant = state.cart[idadd].quant + 1;\r\n      state.cart[idadd].total =\r\n        state.cart[idadd].total + state.cart[idadd].price;\r\n      state.total = state.total + state.cart[idadd].price;\r\n      console.log(state, \"addquant\");\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"minus_quant_test\":\r\n      const idminus = action.payload;\r\n      state.cart[idminus].quant = state.cart[idminus].quant - 1;\r\n      state.cart[idminus].total =\r\n        state.cart[idminus].total - state.cart[idminus].price;\r\n      state.total = state.total - state.cart[idminus].price;\r\n      if (state.cart[idminus] === 0) {\r\n        return state.filter((item) => item.id === idminus);\r\n      }\r\n      console.log(state, \"addquant\");\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"send_order\":\r\n      const neworder = {\r\n        num: 1223,\r\n        customer: \"oleg\",\r\n        items: state.cart,\r\n        total: state.total,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n        total: 0,\r\n        order: [...state.order, neworder],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}