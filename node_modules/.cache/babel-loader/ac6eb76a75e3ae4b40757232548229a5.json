{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LH\\\\Desktop\\\\projects\\\\reactApp\\\\meteorproject\\\\src\\\\components\\\\Reviews.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Review from \"./Review\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { ContextApp } from \"../context/reducer\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  text: {\n    width: \"100%\",\n    maxWidth: 500\n  },\n  image: {\n    width: \"100%\"\n  },\n  formitem: {\n    flexDirection: \"row\",\n    display: \"flex\"\n  }\n}));\nexport default function Reviews(props) {\n  const classes = useStyles();\n  const {\n    state,\n    dispatch,\n    itemState\n  } = useContext(ContextApp);\n  const [reviewState, setReview] = useState({\n    title: \"\",\n    text: \"\",\n    rating: 0,\n    author: \"Dan dan\",\n    date: \"11/22/2099\"\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n    useEffect(() => {\n      return itemState.itemrating.comments.push(reviewState);\n    }, [itemState]);\n    itemState.itemrating.comments.push(reviewState);\n    console.log(itemState);\n  };\n\n  const changeText = event => {\n    setReview({ ...reviewState,\n      text: event.target.value\n    });\n  };\n\n  const changeTitle = event => {\n    setReview({ ...reviewState,\n      title: event.target.value\n    });\n  };\n\n  const changeRating = event => {\n    setReview({ ...reviewState,\n      rating: Number(event.target.value)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Name\",\n    className: classes.formitem,\n    value: reviewState.title,\n    onChange: event => changeTitle(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 4,\n    className: classes.formitem,\n    onChange: (event, newValue) => {\n      changeText(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Controlled\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: reviewState.rating,\n    onChange: (event, newValue) => {\n      changeRating(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Send\"))), props.items.itemrating.comments.map(item => {\n    return /*#__PURE__*/React.createElement(Review, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/components/Reviews.js"],"names":["React","useState","useContext","useEffect","makeStyles","Grid","Review","Rating","Typography","Box","TextField","Button","ContextApp","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","width","maxWidth","image","formitem","flexDirection","display","Reviews","props","classes","state","dispatch","itemState","reviewState","setReview","title","rating","author","date","submitHandler","event","preventDefault","itemrating","comments","push","console","log","changeText","target","value","changeTitle","changeRating","Number","newValue","items","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Review from \"./Review\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ContextApp } from \"../context/reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  text: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n  },\r\n  formitem: {\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function Reviews(props) {\r\n  const classes = useStyles();\r\n  const { state, dispatch, itemState } = useContext(ContextApp);\r\n  const [reviewState, setReview] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    rating: 0,\r\n    author: \"Dan dan\",\r\n    date: \"11/22/2099\",\r\n  });\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    useEffect(() => {\r\n      return itemState.itemrating.comments.push(reviewState);\r\n    }, [itemState]);\r\n    itemState.itemrating.comments.push(reviewState);\r\n    console.log(itemState);\r\n  };\r\n  const changeText = (event) => {\r\n    setReview({ ...reviewState, text: event.target.value });\r\n  };\r\n  const changeTitle = (event) => {\r\n    setReview({ ...reviewState, title: event.target.value });\r\n  };\r\n  const changeRating = (event) => {\r\n    setReview({ ...reviewState, rating: Number(event.target.value) });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <form\r\n          onSubmit={submitHandler}\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Name\"\r\n            className={classes.formitem}\r\n            value={reviewState.title}\r\n            onChange={(event) => changeTitle(event)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Multiline\"\r\n            multiline\r\n            rows={4}\r\n            className={classes.formitem}\r\n            onChange={(event, newValue) => {\r\n              changeText(event);\r\n            }}\r\n          />\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Typography component=\"legend\">Controlled</Typography>\r\n            <Rating\r\n              name=\"simple-controlled\"\r\n              value={reviewState.rating}\r\n              onChange={(event, newValue) => {\r\n                changeRating(event);\r\n              }}\r\n            />\r\n          </Box>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Grid>\r\n      {props.items.itemrating.comments.map((item) => {\r\n        return <Review item={item} />;\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}