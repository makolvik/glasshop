{"ast":null,"code":"import React from \"react\";\nimport { act } from \"react-dom/test-utils\";\nexport const ContextApp = React.createContext();\nexport const initialState = {\n  cart: [{\n    id: 1,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45\n  }, {\n    id: 2,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45\n  }, {\n    id: 3,\n    name: \"item1\",\n    price: 45,\n    quant: 1,\n    total: 45\n  }],\n  total: 135,\n  order: []\n};\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"add_item\":\n      const newitem = { ...action.payload,\n        quant: 1,\n        total: action.payload.price\n      };\n      return { ...state,\n        cart: [...state.cart, newitem],\n        total: state.total + newitem.price\n      };\n\n    case \"add_quant_test\":\n      const idadd = action.payload;\n      state.cart[idadd].quant = state.cart[idadd].quant + 1;\n      state.cart[idadd].total = state.cart[idadd].total + state.cart[idadd].price;\n      state.total = state.total + state.cart[idadd].price;\n      console.log(state, \"addquant\");\n      return { ...state\n      };\n\n    case \"minus_quant_test\":\n      const idminus = action.payload;\n      state.cart[idminus].quant = state.cart[idminus].quant - 1;\n      state.cart[idminus].total = state.cart[idminus].total - state.cart[idminus].price;\n      state.total = state.total - state.cart[idminus].price;\n\n      if (state.cart[idminus] === 0) {\n        return state.filter(item => item.id === idminus);\n      }\n\n      console.log(state, \"addquant\");\n      return { ...state\n      };\n\n    case \"send_order\":\n      const neworder = {\n        num: 1223,\n        customer: \"oleg\",\n        items: state.cart,\n        total: state.total\n      };\n      return { ...state,\n        cart: [],\n        total: 0,\n        order: [...state.order, neworder]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/context/reducer.js"],"names":["React","act","ContextApp","createContext","initialState","cart","id","name","price","quant","total","order","cartReducer","state","action","type","newitem","payload","idadd","console","log","idminus","filter","item","neworder","num","customer","items"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport const ContextApp = React.createContext();\r\n\r\nexport const initialState = {\r\n  cart: [\r\n    { id: 1, name: \"item1\", price: 45, quant: 1, total: 45 },\r\n    { id: 2, name: \"item1\", price: 45, quant: 1, total: 45 },\r\n    { id: 3, name: \"item1\", price: 45, quant: 1, total: 45 },\r\n  ],\r\n  total: 135,\r\n  order: [],\r\n};\r\nexport const cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add_item\":\r\n      const newitem = {\r\n        ...action.payload,\r\n        quant: 1,\r\n        total: action.payload.price,\r\n      };\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, newitem],\r\n        total: state.total + newitem.price,\r\n      };\r\n    case \"add_quant_test\":\r\n      const idadd = action.payload;\r\n      state.cart[idadd].quant = state.cart[idadd].quant + 1;\r\n      state.cart[idadd].total =\r\n        state.cart[idadd].total + state.cart[idadd].price;\r\n      state.total = state.total + state.cart[idadd].price;\r\n      console.log(state, \"addquant\");\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"minus_quant_test\":\r\n      const idminus = action.payload;\r\n      state.cart[idminus].quant = state.cart[idminus].quant - 1;\r\n      state.cart[idminus].total =\r\n        state.cart[idminus].total - state.cart[idminus].price;\r\n      state.total = state.total - state.cart[idminus].price;\r\n      if (state.cart[idminus] === 0) {\r\n        return state.filter((item) => item.id === idminus);\r\n      }\r\n      console.log(state, \"addquant\");\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"send_order\":\r\n      const neworder = {\r\n        num: 1223,\r\n        customer: \"oleg\",\r\n        items: state.cart,\r\n        total: state.total,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n        total: 0,\r\n        order: [...state.order, neworder],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}