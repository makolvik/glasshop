{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LH\\\\Desktop\\\\projects\\\\reactApp\\\\meteorproject\\\\src\\\\components\\\\Reviews.js\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Review from \"./Review\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { ContextApp } from \"../context/reducer\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Container } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  text: {\n    width: \"100%\",\n    maxWidth: 500\n  },\n  image: {\n    width: \"100%\"\n  },\n  formitem: {\n    flexDirection: \"row\",\n    display: \"flex\"\n  },\n  pagination: {\n    width: \"300px\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function Reviews(props) {\n  const classes = useStyles();\n  const {\n    state,\n    setReviewState\n  } = useState(props.comments);\n  const [displayForm, setDisplay] = useState(false);\n  const [page, setpage] = useState(1);\n  const [reviewState, setReview] = useState({\n    title: \"\",\n    text: \"\",\n    rating: 0,\n    author: \"Dan dan\",\n    date: \"11/22/2099\"\n  });\n\n  const submitHandler = event => {\n    event.preventDefault(); // const newState = {\n    //   ...itemState,\n    //   itemrating: {\n    //     ...itemState.itemrating,\n    //     comments: [...itemState.itemrating.comments, reviewState],\n    //   },\n    // };\n    // itemState = newState;\n    // dispatch({ type: \"add_comments\", payload: reviewState });\n    // setReview({\n    //   title: \"\",\n    //   text: \"\",\n    //   rating: 0,\n    //   author: \"Dan dan\",\n    //   date: \"11/22/2099\",\n    // });\n\n    setDisplay(false);\n  };\n\n  const changeText = event => {\n    setReview({ ...reviewState,\n      text: event.target.value\n    });\n  };\n\n  const changeTitle = event => {\n    setReview({ ...reviewState,\n      title: event.target.value\n    });\n  };\n\n  const changeRating = event => {\n    setReview({ ...reviewState,\n      rating: Number(event.target.value)\n    });\n  };\n\n  const formHandler = () => {\n    displayForm ? setDisplay(false) : setDisplay(true);\n  };\n\n  const handleChange = (event, value) => {\n    setpage(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => formHandler(),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Write review\"), \" \"), displayForm && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Name\",\n    className: classes.formitem,\n    value: reviewState.title,\n    onChange: event => changeTitle(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 4,\n    value: reviewState.text,\n    className: classes.formitem,\n    onChange: (event, newValue) => {\n      changeText(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Controlled\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: reviewState.rating,\n    onChange: (event, newValue) => {\n      changeRating(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Send\"))), state.map(item => {\n    return /*#__PURE__*/React.createElement(Review, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    className: classes.pagination,\n    count: Math.ceil(state.length / 5),\n    page: page,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/LH/Desktop/projects/reactApp/meteorproject/src/components/Reviews.js"],"names":["React","useState","useContext","makeStyles","Grid","Review","Rating","Typography","Box","TextField","Button","ContextApp","Pagination","Container","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","width","maxWidth","image","formitem","flexDirection","display","pagination","margin","marginTop","Reviews","props","classes","state","setReviewState","comments","displayForm","setDisplay","page","setpage","reviewState","setReview","title","rating","author","date","submitHandler","event","preventDefault","changeText","target","value","changeTitle","changeRating","Number","formHandler","handleChange","newValue","map","item","Math","ceil","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Review from \"./Review\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ContextApp } from \"../context/reducer\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  text: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n  },\r\n  formitem: {\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n  },\r\n  pagination: {\r\n    width: \"300px\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Reviews(props) {\r\n  const classes = useStyles();\r\n  const { state, setReviewState } = useState(props.comments);\r\n  const [displayForm, setDisplay] = useState(false);\r\n  const [page, setpage] = useState(1);\r\n  const [reviewState, setReview] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    rating: 0,\r\n    author: \"Dan dan\",\r\n    date: \"11/22/2099\",\r\n  });\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // const newState = {\r\n    //   ...itemState,\r\n    //   itemrating: {\r\n    //     ...itemState.itemrating,\r\n    //     comments: [...itemState.itemrating.comments, reviewState],\r\n    //   },\r\n    // };\r\n    // itemState = newState;\r\n    // dispatch({ type: \"add_comments\", payload: reviewState });\r\n    // setReview({\r\n    //   title: \"\",\r\n    //   text: \"\",\r\n    //   rating: 0,\r\n    //   author: \"Dan dan\",\r\n    //   date: \"11/22/2099\",\r\n    // });\r\n    setDisplay(false);\r\n  };\r\n  const changeText = (event) => {\r\n    setReview({ ...reviewState, text: event.target.value });\r\n  };\r\n  const changeTitle = (event) => {\r\n    setReview({ ...reviewState, title: event.target.value });\r\n  };\r\n  const changeRating = (event) => {\r\n    setReview({ ...reviewState, rating: Number(event.target.value) });\r\n  };\r\n  const formHandler = () => {\r\n    displayForm ? setDisplay(false) : setDisplay(true);\r\n  };\r\n  const handleChange = (event, value) => {\r\n    setpage(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Button onClick={() => formHandler()} variant=\"outlined\">\r\n          Write review\r\n        </Button>{\" \"}\r\n      </Grid>\r\n      {displayForm && (\r\n        <Grid item xs={12}>\r\n          <form\r\n            onSubmit={submitHandler}\r\n            className={classes.root}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Name\"\r\n              className={classes.formitem}\r\n              value={reviewState.title}\r\n              onChange={(event) => changeTitle(event)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Multiline\"\r\n              multiline\r\n              rows={4}\r\n              value={reviewState.text}\r\n              className={classes.formitem}\r\n              onChange={(event, newValue) => {\r\n                changeText(event);\r\n              }}\r\n            />\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <Typography component=\"legend\">Controlled</Typography>\r\n              <Rating\r\n                name=\"simple-controlled\"\r\n                value={reviewState.rating}\r\n                onChange={(event, newValue) => {\r\n                  changeRating(event);\r\n                }}\r\n              />\r\n            </Box>\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      )}\r\n      {state.map((item) => {\r\n        return <Review item={item} />;\r\n      })}\r\n      <Container maxWidth=\"sm\">\r\n        <Pagination\r\n          className={classes.pagination}\r\n          count={Math.ceil(state.length / 5)}\r\n          page={page}\r\n          onChange={handleChange}\r\n        />\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}